"Authors","Author full names","Author(s) ID","Title","Year","Source title","Volume","Issue","Art. No.","Page start","Page end","Page count","Cited by","DOI","Link","Abstract","Author Keywords","Index Keywords","Document Type","Publication Stage","Open Access","Source","EID"
"Parrilla A.S.","Parrilla, Adrián Santos (57192705620)","57192705620","Joint analysis of families of SE experiments","2015","CEUR Workshop Proceedings","1469",,"","4","9","5","0","","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84954476854&partnerID=40&md5=5b898b07de1f9f66f83f3ddb8da1f951","Context: Replication is of paramount importance for building solid theories in experimental disciplines and is a cornerstone of the evolution of science. Over the last few years, the role of replication in software engineering (SE), families of experiments and the need to aggregate the results of groups of experiments have attracted special attention. Frameworks, taxonomies, processes, recommendations and guidelines for reporting replications have been proposed to support the replication of SE experiments. There has been much less debate about the issue of the joint analysis of replications whose raw data are available to experimenters. Objectives: The aim of our research is to explore current trends in the joint analysis of SE experiments whose raw data are available to experimenters. Notice that the fact that experimenters have access to the raw data is what differentiates joint analysis from other methods for aggregating experimental results (e.g. systematic literature review (SLR), where the applicability of meta-analysis techniques is widely accepted). The objective of this three-year investigation is to shed light on the best joint analysis approach when the experimenters have access to raw data from several replications. Method: Narrative comparison, standard frequentist methods, meta-analysis and Bayesian methods have been used in SE literature. We will apply and evaluate each approach to the experiments on Test-Driven Development (TDD) carried out within the Experimental Software Engineering Industrial Laboratory (ESEIL) project. We will propose and rate a tentative framework for aggregating results within the ESEIL project. The proposed framework, as well as the different existing methods, will be evaluated on another set of replications of testing technique experiments. Current status: The thesis proposal was elicited on the 15 January 2015 and rounded out over the following six months. As a three-year thesis, its discussion and findings will be projected across the years 2015, 2016 and 2017. The first results are now being aggregated with the data from four different experiments on TDD (two in academia and two in industry), and preliminary results are expected to be available in October 2015. © 2015 for this paper by its authors.","Family of experiments; Joint analysis; Raw data; Se replication","Aggregates; Bayesian networks; Computer programming; Software engineering; Bayesian methods; Experimental software engineering; Frequentist methods; Joint analysis; Raw data; Systematic literature review (SLR); Test driven development; Testing technique; Software testing","Conference paper","Final","","Scopus","2-s2.0-84954476854"
"Munir H.; Moayyed M.; Petersen K.","Munir, Hussan (55579511400); Moayyed, Misagh (55909734600); Petersen, Kai (22635718800)","55579511400; 55909734600; 22635718800","Considering rigor and relevance when evaluating test driven development: A systematic review","2014","Information and Software Technology","56","4","","375","394","19","72","10.1016/j.infsof.2014.01.002","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84894046936&doi=10.1016%2fj.infsof.2014.01.002&partnerID=40&md5=ff922adcd9cec6c96b63fcece15ddb59","Context Test driven development (TDD) has been extensively researched and compared to traditional approaches (test last development, TLD). Existing literature reviews show varying results for TDD. Objective This study investigates how the conclusions of existing literature reviews change when taking two study quality dimension into account, namely rigor and relevance. Method In this study a systematic literature review has been conducted and the results of the identified primary studies have been analyzed with respect to rigor and relevance scores using the assessment rubric proposed by Ivarsson and Gorschek 2011. Rigor and relevance are rated on a scale, which is explained in this paper. Four categories of studies were defined based on high/low rigor and relevance. Results We found that studies in the four categories come to different conclusions. In particular, studies with a high rigor and relevance scores show clear results for improvement in external quality, which seem to come with a loss of productivity. At the same time high rigor and relevance studies only investigate a small set of variables. Other categories contain many studies showing no difference, hence biasing the results negatively for the overall set of primary studies. Given the classification differences to previous literature reviews could be highlighted. Conclusion Strong indications are obtained that external quality is positively influenced, which has to be further substantiated by industry experiments and longitudinal case studies. Future studies in the high rigor and relevance category would contribute largely by focusing on a wider set of outcome variables (e.g. internal code quality). We also conclude that considering rigor and relevance in TDD evaluation is important given the differences in results between categories and in comparison to previous reviews. © 2014 Elsevier B.V. All rights reserved.","External code quality; Internal code quality; Productivity; Test-driven development (TDD); Test-last development (TLD)","Codes (symbols); Productivity; Testing; Code quality; External code; Literature reviews; Longitudinal case study; Rigor and relevances; Systematic literature review; Test driven development; Traditional approaches; Computer programming","Review","Final","","Scopus","2-s2.0-84894046936"
"Van Heugten Breurkes J.; Gilson F.; Galster M.","Van Heugten Breurkes, Jack (57447889900); Gilson, Fabian (25653610500); Galster, Matthias (15622873800)","57447889900; 25653610500; 15622873800","Overlap between Automated Unit and Acceptance Testing - A Systematic Literature Review","2022",ACM International Conference Proceeding Series,"","","","80","89","9","1","10.1145/3530019.3530028","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85132393444&doi=10.1145%2f3530019.3530028&partnerID=40&md5=c911472cd8c88779c1eefdf0d2f0ba12","Unit and automated acceptance testing have different objectives (e.g., testing units of code versus testing complete features). Testing practices (e.g., test-first, model-based) used for one ""level""of testing (for either unit or acceptance testing) may require knowledge and skills that are not applicable to the other. This makes it difficult for practitioners to gain the skills required to effectively test at all levels and form a cohesive testing strategy. The aim of this systematic literature review is to understand whether there are any automated unit testing practices that have similarities with automated acceptance testing practices (and vice versa). Understanding these similarities can enable skill transfer across testing activities at different levels. This systematic literature review focuses on empirical research with an industry focus. We found that test-driven development (TDD) and model-based test generation (MBTG) are two practices widely researched for both unit testing and acceptance testing. For TDD we found that a design- and test-first mindset is required and helpful at both the unit and acceptance levels, but practitioners struggle with that practice. For MBTG we found that, despite its ability to increase code coverage, the additional manual effort to enable automated test generation may outweigh its benefits. © 2022 ACM.","acceptance testing; automated testing; model-based test generation; test-driven development; testing strategy; unit testing","Ability testing; Automation; Model checking; Acceptance testing; Automated acceptance testing; Automated testing; Automated unit testing; Model-based OPC; Model-based test generation; Systematic literature review; Test driven development; Testing strategies; Unit testing; Acceptance tests","Conference paper","Final","","Scopus","2-s2.0-85132393444"
"Yahya N.; Awang Abu Bakar N.S.","Yahya, Norzariyah (57210638090); Awang Abu Bakar, N.S. (56565540900)","57210638090; 56565540900","Test driven development contribution in universities in producing quality software: A systematic review","2014","2014 the 5th International Conference on Information and Communication Technology for the Muslim World, ICT4M 2014","","","7020666","","","","2","10.1109/ICT4M.2014.7020666","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946689405&doi=10.1109%2fICT4M.2014.7020666&partnerID=40&md5=02e863549f3bc0a835ea0f2f3ff5de56","Test driven development (TDD) is one of the Agile techniques adopted in education. TDD is an ideal approach to be taught in university due to its capability in producing quality software and at the same time teaching novice programmers to test and develop a product simultaneously. It helps novice programmers to think before they develop rather than using 'trial-and-error' approach in their project. However, based on the existing research, TDD contribution in producing a better quality and the perception among novice programmers towards it needs to be analyzed. This systematic review will identify the quality of a product produced by the students in university and also their perception towards TDD. © 2014 IEEE.","experiment; perception; quality; Test driven development; university","Computer programming; Experiments; Image quality; Sensory perception; Novice programmer; Quality software; Systematic Review; Test driven development; Trial and error; university; Software testing","Conference paper","Final","","Scopus","2-s2.0-84946689405"
"","","","19th International Conference on Product-Focused Software Process Improvement, PROFES 2018","2018","Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)","11271 LNCS","","","","","456","0","","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85057265727&partnerID=40&md5=c940da61720f15626746aadb9901e3de","The proceedings contain 36 papers. The special focus in this conference is on  Product-Focused Software Process Improvement. The topics include: Software professionals’ attitudes towards video as a medium in requirements engineering; do developers really worry about refactoring re-test? An empirical study of open-source systems; moving beyond the mean: Analyzing variance in software engineering experiments; an activity and metric model for online controlled experiments; influential factors of aligning spotify squads in mission-critical and offshore projects – A longitudinal embedded case study; test-driving fintech product development: An experience report; Does the performance of TDD hold across software companies and premises? A group of industrial experiments on TDD; test case prioritization using test similarities; feature crumbs: Adapting usage monitoring to continuous software engineering; agile manifesto and practices selection for tailoring software development: A systematic literature review; software process measurement and related challenges in agile software development: A multiple case study; emperor’s new clothes: Transparency through metrication in customer-supplier relationships; global software development: Practices for cultural differences; exploring cross-site networking in large-scale distributed projects; Benefits and challenges of adopting the Scaled Agile Framework (SAFe): Preliminary results from a multivocal literature review; threat analysis in practice – Systematically deriving security requirements; process evolution and product maturity: From prototype to product; workshops and tutorials; 2nd QuASD workshop: Managing quality in agile and rapid software development processes; quality improvement of mobile apps – Tool-supported lightweight feedback analyses; agile meets assessments: Case study on how to do agile process improvement in a very small enterprise.","","","Conference review","Final","","Scopus","2-s2.0-85057265727"
"Meyer B.; Leitner A.","Meyer, Bertrand (7402073082); Leitner, Andreas (57213574357)","7402073082; 57213574357","Contract-driven development","2007","Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)","4422 LNCS","","","11","","","6","","https://www.scopus.com/inward/record.uri?eid=2-s2.0-37149039638&partnerID=40&md5=9a3a41f6676228175f35c6df4164a7f7","In spite of cultural difference between the corresponding scientific communities, recognition is growing that test-based and specification-based approaches to software development actually complement each other. The revival of interest in testing tools and techniques follows in particular from the popularity of ""Test-Driven Development""; rigorous specification and proofs have, for their part, also made considerable progress. There remains, however, a fundamental superiority of specifications over test: you can derive tests from a specification, but not the other way around. Contract-Driven Development is a new approach to systematic software construction combining ideas from Design by Contract, from TestDriven Development, from work on formal methods, and from advances in automatic testing as illustrated for example in our AutoTest tool. Like TDD it gives tests a central role in the development process, but these tests are deduced from possibly partial specifications (contracts) and directly supported by the development environment. This talk will explain the concepts and demonstrate their application. © Springer-Verlag Berlin Heidelberg 2007.","","Automatic testing; Pattern recognition; Specifications; AutoTest tool; Partial specifications; Scientific communities; Test-Driven Development; Software engineering","Conference paper","Final","","Scopus","2-s2.0-37149039638"
"Shull F.; Melnik G.; Turhan B.; Layman L.; Diep M.; Erdogmus H.","Shull, Forrest (6603060816); Melnik, Grigori (8925161800); Turhan, Burak (21744228000); Layman, Lucas (8324841200); Diep, Madeline (8649957100); Erdogmus, Hakan (55897516600)","6603060816; 8925161800; 21744228000; 8324841200; 8649957100; 55897516600","What do we know about test-driven development?","2010","IEEE Software","27","6","5604358","16","19","3","59","10.1109/MS.2010.152","https://www.scopus.com/inward/record.uri?eid=2-s2.0-77958165614&doi=10.1109%2fMS.2010.152&partnerID=40&md5=4dda1664161e9ff5787851455df369c9","TDD proponents assert that frequent, incremental testing not only improves the delivered code's quality but also generates a cleaner design. The authors present results from a systematic literature review as well as commentary on the results from a TDD expert's experience on field projects. © 2006 IEEE.","software engineering","Systematic literature review; Test driven development; Software engineering","Article","Final","","Scopus","2-s2.0-77958165614"
"Caro J.B.; Ansari J.; Sachs J.; de Bruin P.; Sivri S.; Grosjean L.; König N.; Schmitt R.H.","Caro, Jordi Biosca (57713458100); Ansari, Junaid (17433401200); Sachs, Joachim (7101926193); de Bruin, Peter (7003860005); Sivri, Sertap (57712438600); Grosjean, Leefke (56458716300); König, Niels (23090728200); Schmitt, Robert H. (55418282900)","57713458100; 17433401200; 7101926193; 7003860005; 57712438600; 56458716300; 23090728200; 55418282900","Empirical Study on 5G NR Cochannel Coexistence","2022","Electronics (Switzerland)","11","11","1676","","","","1","10.3390/electronics11111676","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85130857960&doi=10.3390%2felectronics11111676&partnerID=40&md5=49d24175996c46fa296dcfed6a159537","The 5G non-public network deployments for industrial applications are becoming highly interesting for industries and enterprises owing to dependable wireless performance characteris-tics. With an increasing trend of network deployments in local licensed and/or shared spectrum, coexistence issues naturally arise. In this article, we present our detailed empirical results on the performance impact of a 5G NR indoor non-public network from a 5G NR outdoor network operating in the same mid-band spectrum. We present experimental results on the uplink and downlink performance impact of a non-public indoor network deployed on an industrial shopfloor. Our results quantify the impact on the uplink and downlink performance characteristics based on realistic traffic loads in a non-public indoor network when using synchronized and unsynchronized Time Division Duplex (TDD) patterns, different UE deployment locations and interference levels. We also present results on mitigating interference effects through robust link adaptation techniques. We believe that this is the first article, which reports quantified 5G NR cochannel coexistence results based on a detailed and systematic study, and provides signficant insights on the cochannel coexistence behavior in realistic deployment scenarios of an industrial shopfloor. © 2022 by the authors. Licensee MDPI, Basel, Switzerland.","5G NR; 5G performance; coexistence; empirical results; interference mitigation; TDD","","Article","Final","All Open Access; Gold Open Access","Scopus","2-s2.0-85130857960"
"Causevic A.; Sundmark D.; Punnekkat S.","Causevic, Adnan (57213042003); Sundmark, Daniel (8328803400); Punnekkat, Sasikumar (6602972269)","57213042003; 8328803400; 6602972269","Factors limiting industrial adoption of test driven development: A systematic review","2011","Proceedings - 4th IEEE International Conference on Software Testing, Verification, and Validation, ICST 2011","","","5770623","337","346","9","66","10.1109/ICST.2011.19","https://www.scopus.com/inward/record.uri?eid=2-s2.0-79958704204&doi=10.1109%2fICST.2011.19&partnerID=40&md5=00af8c7789ab4d911323443e7aba9203","Test driven development (TDD) is one of the basic practices of agile software development and both academia and practitioners claim that TDD, to a certain extent, improves the quality of the code produced by developers. However, recent results suggest that this practice is not followed to the extent preferred by industry. In order to pinpoint specific obstacles limiting its industrial adoption we have conducted a systematic literature review on empirical studies explicitly focusing on TDD as well as indirectly addressing TDD. Our review has identified seven limiting factors viz., increased development time, insufficient TDD experience/knowledge, lack of upfront design, domain and tool specific issues, lack of developer skill in writing test cases, insufficient adherence to TDD protocol, and legacy code. The results of this study is of special importance to the testing community, since it outlines the direction for further detailed scientific investigations as well as highlights the requirement of guidelines to overcome these limiting factors for successful industrial adoption of TDD. © 2011 IEEE.","agile software development; empirical studies; systematic review; Test driven developmen; unit testing","Computer programming; Computer software selection and evaluation; Industry; Software design; Verification; Agile software development; Empirical studies; Systematic Review; Test driven developmen; Unit testing; Software testing","Conference paper","Final","All Open Access; Green Open Access","Scopus","2-s2.0-79958704204"
"Wang L.-C.; Li W.-C.","Wang, Li-Chun (23095874000); Li, Wei-Chi (36768336900)","23095874000; 36768336900","Outage performance analysis for fractional frequency reused TDD-OFDMA systems with asymmetric traffics","2010","ISITA/ISSSTA 2010 - 2010 International Symposium on Information Theory and Its Applications","","","5649531","969","974","5","3","10.1109/ISITA.2010.5649531","https://www.scopus.com/inward/record.uri?eid=2-s2.0-78651293665&doi=10.1109%2fISITA.2010.5649531&partnerID=40&md5=b217ef8d1c20d0e30d2e99b8d4167cab","In this paper, we present an analytical approach to design the inner region size for the fractional frequency reused (FFR) time division duplex (TDD) orthogonal frequency division multiple access (OFDMA) systems when supporting asymmetrical traffic services. In TDD system, supporting asymmetrical traffic can be achieved by adjusting the ratio of downlink and uplink transmission period. Nevertheless, the intercell interference may be deteriorated by the cross-slot interference resulting from the different downlink and uplink ratios among neighboring cells. Although the FFR technique can overcome the inter-cell interference, the impact of the cross-slot interference of TDD systems due to various downlink to uplink traffic ratios in different cells on the inner region size of a FFR-based OFDMA system is an open issue to our best knowledge. Intuitively, the larger the inner region of a FFR system, the higher the system capacity. Thus, this paper can provide a systematic method to determine the size of the inner region of FFR-based OFDMA system for different ratios of the downlink to uplink traffic among two neighbor cells. © 2010 IEEE.","Asymmetric traffic; Cross-slot interference; Fractional frequency reuse (FFR); OFDMA; Time division duplex (TDD)","Information theory; Radio interference; Spectroscopy; Asymmetric traffic; Cross-slot interference; Fractional Frequency Reuse; OFDMA; Time division duplex; Frequency division multiple access","Conference paper","Final","","Scopus","2-s2.0-78651293665"
"Misso A.; Kissaka M.; Maiseli B.","Misso, Angelina (57203300718); Kissaka, Mussa (6506690958); Maiseli, Baraka (55869157000)","57203300718; 6506690958; 55869157000","Exploring pilot assignment methods for pilot contamination mitigation in massive MIMO systems","2020","Cogent Engineering","7","1","1831126","","","","3","10.1080/23311916.2020.1831126","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85094831714&doi=10.1080%2f23311916.2020.1831126&partnerID=40&md5=628def9367c18bffc9166ceb00472591","In massive multi-input multi-output (MIMO) antenna system, the performance is restricted by inter-cell interference called pilot contamination. However, acquisition of channel state information for channel estimation introduces overheads of pilots required to estimate the channel frequently, a disadvantage that causes inefficient use of bandwidth. A tradeoff thus exists between the number of pilots required to estimate the channel versus the spectral efficiency. Studies on pilot decontamination using pilot assignment lack consideration of the comparative analysis to determine superior approaches. Limited literature exists on the analysis of the existing pilot assignment techniques. Different techniques exhibit varied performances and influence on resource utilization. The purpose of this study is to analyze various methods of pilot assignment schemes for mitigation of pilot contamination in massive MIMO systems. A systematic review approach is adopted to examine different related works and the adopted methodologies, outcomes, and restrictions to determine the most suitable approaches. This study further demonstrates the impact of coherence interval distribution between the pilots for channel estimation and data transmission. An analysis of a tradeoff between FDD and TDD modes is presented to determine the most suitable for massive MIMO antennas. In addition, the study provides recommendations for future research. © 2020 The Author(s). This open access article is distributed under a Creative Commons Attribution (CC-BY) 4.0 license.","massive MIMO; pilot allocation; pilot assignment; pilot contamination","","Article","Final","All Open Access; Gold Open Access","Scopus","2-s2.0-85094831714"
"Huh H.; Caire G.; Papadopoulos H.C.; Ramprashad S.A.","Huh, Hoon (7005666766); Caire, Giuseppe (7004399543); Papadopoulos, Haralabos C. (7003379289); Ramprashad, Sean A. (6602597905)","7005666766; 7004399543; 7003379289; 6602597905","Achieving ""massive MIMO"" spectral efficiency with a not-so-large number of antennas","2012","IEEE Transactions on Wireless Communications","11","9","6241389","3226","3239","13","319","10.1109/TWC.2012.070912.111383","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84866742088&doi=10.1109%2fTWC.2012.070912.111383&partnerID=40&md5=c2f2618c0c1018ff3229ed7851f72a26","Time-Division Duplexing (TDD) allows to estimate the downlink channels for an arbitrarily large number of base station antennas from a finite number of orthogonal uplink pilot signals, by exploiting channel reciprocity. Based on this observation, a recently proposed ""Massive MIMO"" scheme was shown to achieve unprecedented spectral efficiency in realistic conditions of distance-dependent pathloss and channel coherence time and bandwidth. The main focus and contribution of this paper is an improved Network-MIMO TDD architecture achieving spectral efficiencies comparable with ""Massive MIMO"", with one order of magnitude fewer antennas per active user per cell (roughly, from 500 to 50 antennas). The proposed architecture is based on a family of Network-MIMO schemes defined by small clusters of cooperating base stations, zero-forcing multiuser MIMO precoding with suitable inter-cluster interference mitigation constraints, uplink pilot signals allocation and frequency reuse across cells. The key idea consists of partitioning the users into equivalence classes, optimizing the Network-MIMO scheme for each equivalence class, and letting a scheduler allocate the channel time-frequency dimensions to the different classes in order to maximize a suitable network utility function that captures a desired notion of fairness. This results in a mixed-mode Network-MIMO architecture, where different schemes, each of which is optimized for the served user equivalence class, are multiplexed in time-frequency. In order to carry out the performance analysis and the optimization of the proposed architecture in a systematic and computationally efficient way, we consider the large-system regime where the number of users, the number of antennas, and the channel coherence block length go to infinity with fixed ratios. © 2012 IEEE.","Channel training; downlink scheduling; frequency reuse; inter-cell cooperation; large-system analysis; linear precoding; Massive MIMO; pilot contamination; time-division duplex","Antennas; Base stations; Cluster computing; Equivalence classes; Interference suppression; MIMO systems; Optimization; Scheduling; Spectrum analyzers; Downlink scheduling; Frequency re-use; inter-cell cooperation; Large-system analysis; Linear pre-coding; Time division duplex; Network architecture","Article","Final","All Open Access; Green Open Access","Scopus","2-s2.0-84866742088"
"Kakarontzas G.; Stamelos I.; Katsaros P.","Kakarontzas, George (14045362800); Stamelos, Ioannis (6604041235); Katsaros, Panagiotis (6506223455)","14045362800; 6604041235; 6506223455","Product line variability with elastic components and test-driven development","2008","2008 International Conference on Computational Intelligence for Modelling Control and Automation, CIMCA 2008","","","5172615","146","151","5","16","10.1109/CIMCA.2008.84","https://www.scopus.com/inward/record.uri?eid=2-s2.0-70449578456&doi=10.1109%2fCIMCA.2008.84&partnerID=40&md5=e68e530b15f647b6a8f19ff32c1d1e7b","In this work we present a systematic approach for the creation of new variant software components via customization of existing core assets of a software product line. We consider both functional and quality variants and address the issue of a controlled creation of variants which considers the reference architecture and its co-evolution with a number of other artifacts including components and functional and quality test suites. Furthermore we discuss the relationship between the popular agile practice of Test-Driven Development (TDD) and how it can be used to assist the evolution of software components of a software product line. © 2008 IEEE.","","Artificial intelligence; Agile practices; Co-evolution; Core asset; Elastic components; Product-lines; Quality test; Reference architecture; Software component; Software Product Line; Test driven development; Computer software selection and evaluation","Conference paper","Final","","Scopus","2-s2.0-70449578456"
"Arnyndiasari D.; Ferdiana R.; Santosa P.I.","Arnyndiasari, Devina (57905055200); Ferdiana, Ridi (49663102500); Santosa, Paulus Insap (9636895500)","57905055200; 49663102500; 9636895500","Software Practices for Agile Developers: A Systematic Literature Review","2022","2022 1st International Conference on Information System and Information Technology, ICISIT 2022","","","","238","243","5","0","10.1109/ICISIT54091.2022.9872874","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85138679541&doi=10.1109%2fICISIT54091.2022.9872874&partnerID=40&md5=9e2096c6297d187dedb4c42fad25d912","Software development is one of the work practices in a company's startup, academics, and industries. Agile is a software development methodology that is currently quite popular. Agile development practices existing methodologies include Test-Driven Development (TDD), Behavior-Driven Development (BDD), Domain-Driven Design (DDD), and Model-Driven Development (MDD). Each software development practice is unique as it could hinder or contribute greatly to the creation of said software. Agile is a consideration for developers when selecting appropriate development practices due to the breadth of available practices. Thus, this study identifies the characteristics and effectiveness of Agile methods. Our opinion is that this study can help software developers to better understand the challenges of each agile practices and implement them to create better optimized softwares.  © 2022 IEEE.","Behavior-Driven Development; Domain-Driven Development; Model-Driven Development; Test-Driven Development","Software design; Agile development; Behavior-driven development; Development practices; Domain-driven development; Model-driven-development; Software development methodologies; Software practices; Systematic literature review; Test driven development; Work practices; Software testing","Conference paper","Final","","Scopus","2-s2.0-85138679541"
"Acharya J.; Gao L.; Gaur S.","Acharya, Joydeep (16023979900); Gao, Long (35203339500); Gaur, Sudhanshu (8405263700)","16023979900; 35203339500; 8405263700","Heterogeneous Networks in LTE-Advanced","2014","Heterogeneous Networks in LTE-Advanced","9781118511862","","","1","271","270","38","10.1002/9781118693964","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84927569329&doi=10.1002%2f9781118693964&partnerID=40&md5=4fb8dc6613d7c03dc46be14fed69e490","A comprehensive summary of theoretical and practical developments in LTE Heterogeneous Networks. The last decade has witnessed the proliferation of mobile broadband data and the trend is likely to increase in the coming years. Current cellular networks are ill equipped to deal with this surge in demand. To satisfy user demand and maximize profits, a new paradigm to operate networks is needed. Heterogeneous networks, that deploy an overlay of small cells with limited coverage and transmit power, over a macro coverage area is the solution by providing capacity and coverage where it is needed. This book presents a comprehensive overview of small cell based heterogeneous networks within the framework of 3GPP LTE-Advanced which is the major enabler of current and future heterogeneous networks. The book first establishes the basics of LTE standards 8 -10. Wherever relevant, the underlying theory of wireless communications is explained and the signaling and protocol aspects of LTE Releases 8-10 are presented. Next the book presents a systematic study of the inter cell interference (eICIC and FeICIC) mechanisms that have been standardized in LTE releases 10 and 11 to mitigate the interference arising in heterogeneous networks. From simple blank subframe design and implementation, the book discusses more advanced transceiver signal processing and carrier aggregation (CA) based mechanisms to improve performance. Besides data, control channel enhancements such as enhanced PDCCH (ePDCCH) are also discussed. Subsequently the book discusses the possibility of base stations being allowed to coordinate to manage interference. This technique, called CoMP, has the potential of vastly improving network performance. However several practical challenges first have to be overcome before this potential can be realized. The book presents the different CoMP categories introduced in LTE release 11, the required signal processing and the changes that were introduced in Release-11 for supporting CoMP. The book then presents the state of the art developments in heterogeneous networks that are currently taking place in 3GPP with the initiation of Release 12. A whole array of new technologies have been introduced such as dynamic switching of small cells, new carrier types with reduced control signaling, dynamic reconfiguration of TDD-LTE, joint configuration of TDD and FDD via carrier aggregation and lastly advanced MIMO signal processing with three dimensional beamforming. All these technologies will work in unison leading to efficient operations of small cells. The authors thus comprehensively summarize the advances in heterogeneous networks over the last couple of years as reflected in various LTE releases and then look ahead at what to expect in the future. Fully illustrated throughout and with an accompanying website including Matlab code for simulating heterogeneous networks, LTE channel models, and References to 3GPP specifications, contributions, and updates on recent standardization activities. The authors, being involved in LTE standardization, are well placed to give an excellent view on this topic, including valuable background and design rationale. A comprehensive summary of wireless communications theory and practical developments in LTE heterogeneous networks. Authors are experts in this field and are active members in standardization proceedings, enabling up-to-date coverage of current developments. Multiple case studies explain network design optimization of various heterogeneous network deployments. Accompanying website includes Matlab code for simulating heterogeneous networks, LTE channel models, and References to 3GPP specifications, contributions, and updates on recent standardization activities. Essential reading for Engineers and practitioners in wireless industry. © 2014 John Wiley & Sons, Ltd. All rights reserved.","","4G mobile communication systems; Cell signaling; Cells; Dynamic models; Dynamics; Heterogeneous networks; Iron compounds; MATLAB; MIMO systems; Mobile telecommunication systems; Radio transceivers; Signal processing; Specifications; Standardization; Websites; Carrier aggregations; Design and implementations; Dynamic re-configuration; Improve performance; Intercell interference; LTE heterogeneous networks; Multiple-case study; Wireless communications; Wireless telecommunication systems","Book","Final","","Scopus","2-s2.0-84927569329"
"Hua J.; Xu D.; Xu S.","Hua, Jie (56856450300); Xu, Dazhuan (10739451300); Xu, Shengkai (56266676600)","56856450300; 10739451300; 56266676600","Asymptotic Performance Analysis and Degree Distribution Design for Systematic Luby Transform Codes over Binary Erasure Channel","2017","Shuju Caiji Yu Chuli/Journal of Data Acquisition and Processing","32","5","","906","912","6","1","10.16337/j.1004-9037.2017.05.007","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85038245843&doi=10.16337%2fj.1004-9037.2017.05.007&partnerID=40&md5=79e77074f4d0694562061916be829a14","The asymptotic performance formula of systematic LT codes(SLT) in binary erasure channel (BEC) is firstly derived based on AND-OR tree analysis and its lower limit is given. Simulation results show that the actual bit error ratio(BER), the asymptotic performance and the lower limit match each other perfectly when the overhead is large enough. Then the optimization of degree distribution is proposed by the improved systematic linear programming(ISLP) model in accordance with the asymptotic performance. The optimized degree distribution is obviously superior to robust soliton distribution(RSD) and truncated degree distribution(TDD). Furthermore, the asymptotic behavior of the optimized degree distribution can be controlled by the given overhead and BER. In other words, the ideal BER can be obtained within the overhead we want, which also influences the overhead for complete decoding. Simulation results show that the overhead required for data recovery is close to that of we set. The comparison of BER, the overhead required for data recovery and the time of encoding and decoding for LT codes and SLT codes show that SLT codes have better performance than LT codes with more quick speed in data recovery. © 2017, Editorial Department of Journal of Data Acquisition and Processing. All right reserved.","Asymptotic behavior; Degree distribution; Linear optimization; Systematic LT codes","","Article","Final","","Scopus","2-s2.0-85038245843"
"Khamis M.A.; Nagi K.","Khamis, Mohamed A. (57200767463); Nagi, Khaled (57510312000)","57200767463; 57510312000","Designing multi-agent unit tests using systematic test design patterns-(extended version)","2013","Engineering Applications of Artificial Intelligence","26","9","","2128","2142","14","7","10.1016/j.engappai.2013.04.009","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84888352389&doi=10.1016%2fj.engappai.2013.04.009&partnerID=40&md5=cd018c55fa0b1ea54f03b4037398fcb9","Software agents are the basic building blocks in many software systems especially those based on artificial intelligence methods, e.g., reinforcement learning based multi-agent systems (MASs). However, testing software agents is considered a challenging problem. This is due to the special characteristics of agents which include its autonomy, distributed nature, intelligence, and heterogeneous communication protocols. Following the test-driven development (TDD) paradigm, we present a framework that allows MAS developers to write test scenarios that test each agent individually. The framework relies on the concepts of building mock agents and testing common agent interaction design patterns. We analyze the most common agent interaction patterns including pair and mediation patterns in order to provide stereotype implementation for their corresponding test cases. These implementations serve as test building blocks and are provided as a set of ready-for-reuse components in our repository. This way, the developer can concentrate on testing the business logic itself and spare him/her the burden of implementing tests for the underlying agent interaction patterns. Our framework is based on standard components such as the JADE agent platform, the JUnit framework, and the eclipse plug-in architecture. In this paper, we present in details the design and function of the framework. We demonstrate how we can use the proposed framework to define more stereotypes in the code repository and provide a detailed analysis of the code coverage for our designed stereotype test code implementations. © 2013 Elsevier Ltd. All rights reserved.","Agent social design patterns; Code coverage; Code generation; Mock agent; Multi-agent unit tests; Test-driven development","Codes (symbols); Computer programming; Intelligent agents; Multi agent systems; Network function virtualization; Reinforcement learning; Silicate minerals; Software agents; Software testing; Testing; Agent social design patterns; Code coverage; Code Generation; Mock agents; Test driven development; Unit tests; Autonomous agents","Article","Final","","Scopus","2-s2.0-84888352389"
"Schulte W.; Tillmann N.; De Halleux P.","Schulte, Wolfram (7102823689); Tillmann, Nikolai (8954553000); De Halleux, Peli (24461416400)","7102823689; 8954553000; 24461416400","Pex - An intelligent assistant for rigorous developer testing","2007","Proceedings of the IEEE International Conference on Engineering of Complex Computer Systems, ICECCS","","","4276312","161","","","0","10.1109/ICECCS.2007.35","https://www.scopus.com/inward/record.uri?eid=2-s2.0-46749117978&doi=10.1109%2fICECCS.2007.35&partnerID=40&md5=f790cbc0bb4a1373ab92509d1ba28a1f","Pex takes test-driven development to the next level. Pex analyzes .NET applications. From a parameterized unit test, which serves as a specification, it automatically produces traditional unit tests cases with high code coverage. Moreover, when a generated test fails, Pex can often suggest a bug fix. To do so Pex performs a systematic program analysis (similar to path bounded model-checking). It records detailed execution traces of test cases. Pex learns the program behavior from the traces, and a constraint solver produces new test cases with different behavior. The result is a minimal test suite with maximal code coverage. For information about Pex, see http://research.microsoft.com/Pex/ . © 2007 IEEE.","","Codes (standards); Codes (symbols); Computer systems; Computers; Modal analysis; Model checking; Bounded model; code coverage; complex computer systems; Constraint solvers; execution traces; international conferences; Parameterized; program behaviors; Systematic program; Test cases; Test driven development (TDD); test suites; unit testing; Testing","Conference paper","Final","","Scopus","2-s2.0-46749117978"
"Kurjenniemi J.; Hämäläinen S.; Ristaniemi T.; Lehtinen O.; Patronen P.","Kurjenniemi, Janne (56323666600); Hämäläinen, Seppo (6701838104); Ristaniemi, Tapani (35617583200); Lehtinen, Otto (6508277754); Patronen, Petri (6503983323)","56323666600; 6701838104; 35617583200; 6508277754; 6503983323","Convergence of UTRA TDD uplink power control","2001","IEEE Vehicular Technology Conference","4","53ND","","2908","2912","4","9","10.1109/VETECS.2001.944133","https://www.scopus.com/inward/record.uri?eid=2-s2.0-0035191736&doi=10.1109%2fVETECS.2001.944133&partnerID=40&md5=b1e5116fecb85e539574f49322e5871d","In this article convergence of UTRA TDD uplink dedicated physical channel (DPCH) power control is studied. Current uplink power control is based on several measurements, which involve both random and systematic errors. Outer loop power control is used to compensate the systematic error. Since the amount of systematic error is unknown in the beginning of a call and after each handover, the outer loop power control should adapt to the current conditions as fast as possible. In this paper the effect of the convergence speed of the outer loop power control to the UTRA TDD system performance is analyzed by the means of dynamic system level simulator.","","Adaptive systems; Communication channels (information theory); Error analysis; Power control; Radio links; Time division multiplexing; Dedicated physical channel; Terrestrial radio access; Time division duplexing; Uplink power control; Mobile radio systems","Article","Final","","Scopus","2-s2.0-0035191736"
"Rafique Y.; Mǐsí V.B.","Rafique, Yahya (55752410600); Mǐsí, Vojislav B. (55751872000)","55752410600; 55751872000","The effects of test-driven development on external quality and productivity: A meta-analysis","2013","IEEE Transactions on Software Engineering","39","6","6197200","835","856","21","93","10.1109/TSE.2012.28","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878407475&doi=10.1109%2fTSE.2012.28&partnerID=40&md5=aba3bb7ecff9e03988de97d26814c59f","This paper provides a systematic meta-analysis of 27 studies that investigate the impact of Test-Driven Development (TDD) on external code quality and productivity. The results indicate that, in general, TDD has a small positive effect on quality but little to no discernible effect on productivity. However, subgroup analysis has found both the quality improvement and the productivity drop to be much larger in industrial studies in comparison with academic studies. A larger drop of productivity was found in studies where the difference in test effort between the TDD and the control group's process was significant. A larger improvement in quality was also found in the academic studies when the difference in test effort is substantial; however, no conclusion could be derived regarding the industrial studies due to the lack of data. Finally, the influence of developer experience and task size as moderator variables was investigated, and a statistically significant positive correlation was found between task size and the magnitude of the improvement in quality. © 1976-2012 IEEE.","agile software development; code quality; meta-analysis; programmer productivity; Test-driven development","Drops; Productivity; Software engineering; Agile software development; Code quality; Meta-analysis; Programmer productivity; Test driven development; Quality control","Review","Final","","Scopus","2-s2.0-84878407475"
"Holma H.; Toskala A.","Holma, Harri (6603925870); Toskala, Antti (6701733585)","6603925870; 6701733585","LTE for UMTS - OFDMA and SC-FDMA based radio access","2009","LTE for UMTS - OFDMA and SC-FDMA Based Radio Access","","","","1","433","432","795","10.1002/9780470745489","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84948959807&doi=10.1002%2f9780470745489&partnerID=40&md5=ba5efa890e17b14e6756e1cd2080699f","From the editors of the highly successful WCDMA for UMTS, this new book gives a complete and up-to-date overview of Long Term Evolution (LTE) in a systematic and clear manner. It starts with an in-depth explanation of the background and standardization process before moving on to examine the system architecture evolution (SAE). The basics of air interface modulation choices are introduced and key subjects such as 3GPP LTE physical layer and protocol solutions are described. Mobility aspects and radio resource management together with radio and end-to-end performance are assessed. The voice solution and voice capacity in LTE are also illustrated. Finally, the main differences between LTE TDD and FDD modes are examined and HSPA evolution in 3GPP Releases 7 and 8 is described. LTE for UMTS is one of the first books to provide a comprehensive guide to the standards and technologies of LTE. Key features of the book include: Covers all the key aspects of LTE in a systematic manner. Presents full description of 3GPP Release 8 LTE. Examines the expected performance of LTE. © 2009 John Wiley & Sons, Ltd. All Rights Reserved.","","","Book","Final","","Scopus","2-s2.0-84948959807"
"Nagi K.M.; Khamis M.A.","Nagi, Khaled M. (57510312000); Khamis, Mohamed A. (57200767463)","57510312000; 57200767463","Designing multi-agent unit tests using systematic test design patterns","2011","Proceedings of the IADIS International Conference Intelligent Systems and Agents 2011, Part of the IADIS Multi Conference on Computer Science and Information Systems 2011, MCCSIS 2011","","","","11","18","7","2","","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84865088554&partnerID=40&md5=32d3ab6856d22c3a62b37298a05612f8","Following the Test-Driven Development (TDD) paradigm, we present a framework that allows Multi-Agent System (MAS) developers to write test scenarios that test each agent individually. The framework relies on the concepts of building mock agents and testing common agent interaction design patterns. We analyze the most common agent interaction patterns including pair and mediation patterns in order to provide stereotype implementation for their corresponding test cases. These implementations serve as test building blocks and are provided as a set of ready-for-reuse components in our repository. This way, the developer can concentrate on testing the business logic itself and spare him/her the burden of implementing tests for the underlying agent interaction patterns. Our framework is based on standard components such as the JADE agent platform, the junit framework, and the eclipse plug-in architecture. In this paper, we present the design and function of the framework. We demonstrate how we can use the proposed framework to define more stereotypes in the code repository and provide an analysis of the code coverage for our designed stereotype test code implementations. © 2011 IADIS.","Agent social design patterns; Code coverage; Code generation; Mock agent; Test-driven development","Computer science; Information systems; Intelligent systems; Multi agent systems; Software testing; Agent interaction; Building blockes; Business logic; Code coverage; Code Generation; Design Patterns; JADE agent platforms; Multi agent system (MAS); Plug-ins; Standard components; Systematic test; Test case; Test code; Test driven development; Test scenario; Unit tests; Testing","Conference paper","Final","","Scopus","2-s2.0-84865088554"
"Lau V.K.N.; Jiang M.","Lau, Vincent K. N. (7005811464); Jiang, Meilong (57213217767)","7005811464; 57213217767","On the rate adaptation and scheduling design of downlink multi-user, multiple-antenna base station with imperfect CSIT","2005","IEEE Vehicular Technology Conference","3","","1558205","1569","1573","4","2","10.1109/VETECF.2005.1558205","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84931334145&doi=10.1109%2fVETECF.2005.1558205&partnerID=40&md5=9db79e7dec51d4bc409c77d955544b71","In this paper, we investigate the downlink rate adaptation and scheduling design in multiuser multiple-input single-output (MISO) systems with imperfect channel state information at the transmitter (CSIT). We shall propose a systematic design framework to address the rate adaptation and multi-user scheduling combined design based on information theoretical framework. We assume time division duplex (TDD) systems with quasi-static fading channels where packet outage is an important concern with imperfect CSIT. A lower bound on the mutual information of a MISO link in the presence of CSI errors is derived. Based on this lower bound, we present a closed form expression for the average goodput of each user, with packet outage taken into account. Numerical results demonstrate that, by considering the statistic of CSIT errors into the design, the proposed schemes provide significant goodput enhancement. © 2005 IEEE.","Cross layer scheduling; Imperfect CSIT; Multi-user MIMO","Antennas; Base stations; Channel capacity; Design; Fading channels; Information theory; MIMO systems; Scheduling; Closed-form expression; Cross layer scheduling; Imperfect channel state information; Imperfect CSIT; Multi user multiple input single outputs; Multi-user MIMO; Quasi-static fading channels; Time-division duplex systems; Channel state information","Conference paper","Final","","Scopus","2-s2.0-84931334145"
"Kurjenniemi J.; Hämäläinen S.; Ristaniemi T.","Kurjenniemi, Janne (56323666600); Hämäläinen, Seppo (6701838104); Ristaniemi, Tapani (35617583200)","56323666600; 6701838104; 35617583200","Handover and Uplink Power Control Performance in the 3.84 Mcps TDD mode of UTRA Network","2003","Wireless Personal Communications","27","4","","337","351","14","3","10.1023/B:WIRE.0000012271.26918.a6","https://www.scopus.com/inward/record.uri?eid=2-s2.0-1042265988&doi=10.1023%2fB%3aWIRE.0000012271.26918.a6&partnerID=40&md5=ada99df454a6085e18347a77a191516c","In this article we consider the performance of the 3.84 Mcps time-division duplex (TDD) mode of UTRA (Universal Terrestrial Radio Access) network. We emphasize two of the radio resource management algorithms, handover and uplink power control, whose role in the overall system performance is studied extensively. First, a handover algorithm used in WCDMA (Wideband Code Division Multiple Access) standard is considered in a TDD-mode operation. This gives rise to a careful setting of different handover parameters, and the evaluation of the effects to the system performance. Secondly, the specified uplink power control algorithm is considered. Since it is based on several user-made measurements which may involve both random and systematic errors a careful study about the suitability of the power control scheme is carried out.","3G system performance; Handover; Radio resource management; Uplink power control; UTRA TDD","Algorithms; Code division multiple access; Communication channels (information theory); Computer simulation; Error analysis; Frequency division multiplexing; Power control; Simulators; Telecommunication links; Time division multiplexing; 3G system performance; Handover; Radio resource management; Universal Terrestrial radio access time-division duplex (ULTRA TDD); Uplink power control; Wireless telecommunication systems","Article","Final","","Scopus","2-s2.0-1042265988"
"Ławrynowicz A.; Keet C.M.","Ławrynowicz, Agnieszka (55920281500); Keet, C. Maria (8964217800)","55920281500; 8964217800","The TDDonto tool for test-driven development of DL knowledge bases","2016","CEUR Workshop Proceedings","1577","","","","","","3","","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978164148&partnerID=40&md5=42381da4f377a359a7f475db998dd1f4","Adding knowledge to an ontology lacks a verification step by the modeller in most cases, other than 'try and see what the reasoner says about it'. This is due to the lack of a systematic testbed for ontology authoring. Reusing the notion of Test-Driven Development (TDD) from software engineering for ontology development resulted in the specification of 42 test types for the SROIQ language features, as TBox tests using its axioms and as ABox-driven tests with explicitly introduced individuals. We developed TDDOnto, which implements that subset of the TDD tests that could be done by leveraging extant technologies. We examined what the most efficient implementation strategy is with 82 ontologies. The TBox SPARQL queries with OWL-BGP were faster than the ABox-based approach except for disjointness, that effect is more pronounced with larger ontologies, and the OWL API approach is faster than the SPARQL queries for OWL 1 ontologies. A significant difference in performance between OWL and OWL 2 DL ontologies was observed. On average, the TDD tests are faster than classification reasoning, indicating that TDD tests are a promising alternative to the 'try and see' approach in ontology authoring. © 2016, CEUR-WS. All rights reserved.","","Birds; Computer programming; Data description; Formal languages; Semantic Web; Software engineering; Testing; Classification reasoning; Disjointness; Efficient implementation; Knowledge basis; Language features; Ontology development; Sparql queries; Test driven development; Software testing","Conference paper","Final","","Scopus","2-s2.0-84978164148"
"Bissi W.; Serra Seca Neto A.G.; Emer M.C.F.P.","Bissi, Wilson (57160412200); Serra Seca Neto, Adolfo Gustavo (15521292700); Emer, Maria Claudia Figueiredo Pereira (16309352800)","57160412200; 15521292700; 16309352800","The effects of test driven development on internal quality, external quality and productivity: A systematic review","2016","Information and Software Technology","74","","","45","54","9","43","10.1016/j.infsof.2016.02.004","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960077807&doi=10.1016%2fj.infsof.2016.02.004&partnerID=40&md5=ffd9cd1ee43da5e65449d4dd603094d8","Context: Test Driven Development (TDD) is an agile practice that has gained popularity when it was defined as a fundamental part in eXtreme Programming (XP). Objective: This study analyzed the conclusions of previously published articles on the effects of TDD on internal and external software quality and productivity, comparing TDD with Test Last Development (TLD). Method: In this study, a systematic literature review has been conducted considering articles published between 1999 and 2014. Results: In about 57% of the analyzed studies, the results were validated through experiments and in 32% of them, validation was performed through a case study. The results of this analysis show that 76% of the studies have identified a significant increase in internal software quality while 88% of the studies identified a meaningful increase in external software quality. There was an increase in productivity in the academic environment, while in the industrial scenario there was a decrease in productivity. Overall, about 44% of the studies indicated lower productivity when using TDD compared to TLD. Conclusion: According to our findings, TDD yields more benefits than TLD for internal and external software quality, but it results in lower developer productivity than TLD. © 2016 Elsevier B.V. All rights reserved.","External quality; Internal quality; Productivity; Systematic review; Test-driven development","Computer programming; Computer software selection and evaluation; Productivity; Academic environment; External quality; EXtreme Programming; Industrial scenarios; Internal quality; Systematic literature review; Systematic Review; Test driven development; Software testing","Article","Final","","Scopus","2-s2.0-84960077807"
"Chen S.; Sun S.; Wang Y.; Xiao G.; Tamrakar R.","Chen, Shanzhi (13610592600); Sun, Shaohui (35241116200); Wang, Yingmin (55733811200); Xiao, Guojun (56599712800); Tamrakar, Rakesh (36457109400)","13610592600; 35241116200; 55733811200; 56599712800; 36457109400","A comprehensive survey of TDD-based mobile communication systems from TD-SCDMA 3G to TD-LTE(A) 4G and 5G directions","2015","China Communications","12","2","","40","60","20","63","10.1109/CC.2015.7084401","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928102300&doi=10.1109%2fCC.2015.7084401&partnerID=40&md5=66e47a83e800f7c7c11e5b1d673cd1f8","TDD (Time Division Duplex) is one of the two duplex modes. TD-SCDMA (Time Division Synchronous CDMA) is the first TDD-based cellular mobile system which is commercialized in wide area and large scale and TD-SCDMA is also the first cellular mobile system which adopted smart antenna technology (also called as beamforming). As the long term evolution of TD-SCDMA, TD-LTE(A) (Time Division-Long Term Evolution, and TD-LTE Advanced) introduced OFDM (Orthogonal Frequency Division Multiplexing) and enhanced smart antenna technology together with MIMO (Multiple Input Multiple Output), which are adopted by LTE FDD (Frequency Division Duplex) either. It is indicated that TD-SCDMA and TD-LTE(A) have opened a sustainable utilization era of TDD and smart antenna technologies in the wireless mobile communication. This paper aims to present a systematic introduction to TDD-based mobile communications from TD-SCDMA to TD-LTE and beyond, with particular focuses on TDD key technologies, principles of TDD cellular mobile systems, TDD evolution path, and future TDD 5G directions. The comparisons between TDD and FDD are also included. We hope that this paper will provide a comprehensive overview of TDD technology upgrade and its standard evolution, and serve as a valuable reference for research on 5G mobile communication systems. It is believed that TDD will play more important role in 5G. © 2013 IEEE.","5G; smart antenna array; synchronization; TD-LTE; TD-LTE-Advanced; TD-SCDMA; TDD","","Review","Final","","Scopus","2-s2.0-84928102300"
"Maria Keet C.; Ławrynowicz A.","Maria Keet, C. (8964217800); Ławrynowicz, Agnieszka (55920281500)","8964217800; 55920281500","Test-driven development of ontologies","2016","Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)","9678","","","642","657","15","33","10.1007/978-3-319-34129-3_39","https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978977377&doi=10.1007%2f978-3-319-34129-3_39&partnerID=40&md5=3a86855210e56ba8b701f16bdba97b2c","Emerging ontology authoring methods to add knowledge to an ontology focus on ameliorating the validation bottleneck. The verification of the newly added axiom is still one of trying and seeing what the reasoner says, because a systematic testbed for ontology authoring is missing. We sought to address this by introducing the approach of testdriven development for ontology authoring. We specify 36 generic tests, as TBox queries and TBox axioms tested through individuals, and structure their inner workings in an ‘open box’-way, which cover the OWL 2 DL language features. This is implemented as a Protégé plugin so that one can perform a TDD test as a black box test. We evaluated the two test approaches on their performance. The TBox queries were faster, and that effect is more pronounced the larger the ontology is. © Springer International Publishing Switzerland 2016.","","Semantic Web; Language features; Plug-ins; Reasoner; Test driven development; Testing","Conference paper","Final","","Scopus","2-s2.0-84978977377"
"Abushama H.M.; Alassam H.A.; Elhaj F.A.","Abushama, Hisham M. (55954322100); Alassam, Hanaa Altigani (57224170443); Elhaj, Fatin A. (57192159467)","55954322100; 57224170443; 57192159467","The effect of Test-Driven Development and Behavior-Driven Development on Project Success Factors: A Systematic Literature Review Based Study","2021","Proceedings of: 2020 International Conference on Computer, Control, Electrical, and Electronics Engineering, ICCCEEE 2020","","","9429593","","","","4","10.1109/ICCCEEE49695.2021.9429593","https://www.scopus.com/inward/record.uri?eid=2-s2.0-85107133513&doi=10.1109%2fICCCEEE49695.2021.9429593&partnerID=40&md5=d319166df0c75cf75c65ae75f08bf3d1","Agile testing approaches test-driven development (TDD), behavior-driven development (BDD); have gained popularity since the introduction of agile practices. The concept of using these approaches in software projects is to help projects succeed. The effect of TDD and BDD on Project success factors namely, cost, time, and customer satisfaction/external quality, remains an area of investigation. Therefore, this study investigates the results of previously published articles on the effect of TDD and BDD on project success factors. A systematic literature review has been conducted considering articles published between 1999 up to 2020. Thirty-one studies were selected and analyzed. 74.1% of studies are experiments, 25.8% are case studies. 67.7% of these studies were performed in an industrial setting, 29.0% were performed in an academic setting and only one study with 3.22% was mixed academic and industrial settings. The result shows that the TDD and the BDD consume more time and cost compared to traditional testing (TLD). Moreover, the TDD as TLD may not necessarily satisfy the customer unlike the BDD appears that achieve customer satisfaction. Although, when TDD compared to BDD, TDD consumed more time and lower customer acceptance than the BDD. © 2021 IEEE.","Agile Testing; Behavior Driven Development; Projects Success Factors; Systematic Literature Review; Test Driven Development; Test Last Development","Boolean functions; Customer satisfaction; Sales; Agile practices; Agile testing; Customer acceptance; Industrial settings; Project success factors; Software project; Systematic literature review; Test driven development; Computer programming","Conference paper","Final","","Scopus","2-s2.0-85107133513"
"Hametner R.; Winkler D.; Östreicher T.; Biffl S.; Zoitl A.","Hametner, Reinhard (35760794600); Winkler, Dietmar (57210102724); Östreicher, Thomas (36473887600); Biffl, Stefan (6701704981); Zoitl, Alois (9736057900)","35760794600; 57210102724; 36473887600; 6701704981; 9736057900","The adaptation of test-driven software processes to industrial automation engineering","2010","IEEE International Conference on Industrial Informatics (INDIN)","","","5549620","921","927","6","33","10.1109/INDIN.2010.5549620","https://www.scopus.com/inward/record.uri?eid=2-s2.0-77956566051&doi=10.1109%2fINDIN.2010.5549620&partnerID=40&md5=96b208508eb12d175a70ed72cc352909","Software components provide an increasing part of added value in automation systems and become more complex to construct and test. Test-driven development (TDD) of software systems has been successfully used for agile development of business software systems. Test cases guide the system implementation and can be executed automatically after software changes (continuous integration & build strategy). However, TDD processes need to be adapted to control automation systems engineering, where real-world systems are challenging to model and to test automatically. In this paper we introduce an adapted TDD process from the business software engineering domain to industrial automation engineering. We identify a set of UML models that enable the systematic derivation of test cases. Based on an initial empirical study we evaluate the adapted TDD process based on an industrial use case to identify strength and limitation of this approach. Major results of the study were that UML models enabled effective test case derivation in the study context. © 2010 IEEE.","","Automation; Computer software; Industrial applications; Industry; Information science; Unified Modeling Language; Added values; Agile development; Automation systems; Business software; Control automation; Empirical studies; Industrial automation; Industrial use; Real-world system; Software change; Software component; Software process; Software systems; System implementation; Test case; Test driven development; UML Model; Testing","Conference paper","Final","","Scopus","2-s2.0-77956566051"
"Kollanus S.","Kollanus, Sami (8948151800)","8948151800","Test-Driven Development - Still a promising approach?","2010","Proceedings - 7th International Conference on the Quality of Information and Communications Technology, QUATIC 2010","","","5655657","403","408","5","26","10.1109/QUATIC.2010.73","https://www.scopus.com/inward/record.uri?eid=2-s2.0-78751547723&doi=10.1109%2fQUATIC.2010.73&partnerID=40&md5=8c075c1b4a87c893a4fa786a94699372","Test-Driven Development (TDD) has been regarded as a useful practice during the last decade as well in industry as in academia. It has been suggested to have several benefits in software development process. This paper is focused on the reported empirical research on TDD. A systematic literature review was conducted in order to analyze the current empirical evidence. Based on the review data, TDD may improve external code quality, but it also leads to increase in development time. However, there are a lot of contradictory results and it raises a question about the actual factors behind them. More systematic research, specifically controlled experiments and well reported case studies, is needed in order to better understand TDD. © 2010 IEEE.","","Information technology; Research; Controlled experiment; Development time; Empirical evidence; Empirical research; External code; Software development process; Systematic literature review; Systematic research; Test driven development; Software design","Conference paper","Final","","Scopus","2-s2.0-78751547723"
